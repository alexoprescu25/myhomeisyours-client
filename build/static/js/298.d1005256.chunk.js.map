{"version":3,"file":"static/js/298.d1005256.chunk.js","mappings":"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","sources":["webpack://client/./src/components/account/FilterDate.module.scss?6ddb","components/account/FilterDate.tsx","service/guest.service.ts","webpack://client/./src/views/account/bookings/Bookings.module.scss?6fbd","views/account/bookings/Bookings.tsx","views/account/properties/create/config.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading-primary\":\"FilterDate_heading-primary__jj0iZ\",\"filter__container\":\"FilterDate_filter__container__cF3TW\"};","import { type FC } from \"react\";\r\nimport classes from './FilterDate.module.scss';\r\n\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\n\r\nimport { Input, Button } from \"components/shared\";\r\n\r\nconst initialState = {\r\n    from: '',\r\n    to: ''\r\n}\r\n\r\ntype FormProps = {\r\n    from: string;\r\n    to: string;\r\n}\r\n\r\nconst FilterDate: FC<{ onSubmitData: (data: FormProps) => void; isLoading: boolean; }> = ({ onSubmitData, isLoading }) => {\r\n    const {\r\n        register,\r\n        handleSubmit\r\n    } = useForm<FormProps>({ defaultValues: initialState });\r\n\r\n    const onSubmit: SubmitHandler<FormProps> = async (data) => {\r\n        onSubmitData(data);\r\n    }\r\n\r\n    return (\r\n        <div className={ classes.filter }>\r\n            <div className={ classes.filter__container }>\r\n                <form onSubmit={ handleSubmit(onSubmit) }>\r\n                    <Input type=\"date\" label=\"From\" name=\"from\" register={ register } required={ true } />\r\n                    <Input type=\"date\" label=\"To\" name=\"to\" register={ register } required={ true } />\r\n                    <Button mode=\"main\" isLoading={ isLoading }>Filter</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterDate;","import { api } from \"./dataService\";\r\nimport { HTTP_METHODS } from 'constant';\r\n\r\nimport { GuestFormProps } from \"types/shared\";\r\n\r\nexport const createGuest = async (formData: GuestFormProps, propertyId: string, propertyName: string) => {\r\n    const res = await api('/guest/create', {\r\n        method: HTTP_METHODS.POST,\r\n        data: JSON.stringify({ formData, propertyId, propertyName })\r\n    })\r\n\r\n    return res;\r\n}\r\n\r\nexport const deleteGuest = async (guestId: string, propertyName: string) => {\r\n    const res = await api('/guest/delete', {\r\n        method: HTTP_METHODS.POST,\r\n        data: JSON.stringify({ guestId, propertyName })\r\n    })\r\n\r\n    return res;\r\n}\r\n\r\nexport const fetchFutureGuests = async (propertyId: string) => {\r\n    const res = await api('/guest/fetch-future-guests', {\r\n        method: HTTP_METHODS.POST,\r\n        data: JSON.stringify({ propertyId })\r\n    })\r\n\r\n    return res;\r\n}\r\n\r\nexport const fetchPastGuests = async (propertyId: string) => {\r\n    const res = await api('/guest/fetch-past-guests', {\r\n        method: HTTP_METHODS.POST,\r\n        data: JSON.stringify({ propertyId })\r\n    })\r\n\r\n    return res;\r\n}\r\n\r\nexport const fetchGuests = async (config: { skip: number; limit: number; from?: string; to?: string; }) => {\r\n    const res = await api('/guest/fetch', {\r\n        method: HTTP_METHODS.POST,\r\n        data: JSON.stringify({ \r\n            skip: config.skip,\r\n            limit: config.limit,\r\n            from: config.from,\r\n            to: config.to\r\n        })\r\n    })\r\n\r\n    return res;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"heading-primary\":\"Bookings_heading-primary__+WKce\",\"bookings__pagination\":\"Bookings_bookings__pagination__-hWpD\",\"bookings__disclaimer\":\"Bookings_bookings__disclaimer__ozO4J\",\"bookings__filter\":\"Bookings_bookings__filter__GUhlJ\",\"bookings__data\":\"Bookings_bookings__data__w8hdA\",\"delete__container\":\"Bookings_delete__container__fHA6e\",\"delete__image\":\"Bookings_delete__image__ok9HB\",\"delete__actions\":\"Bookings_delete__actions__SZ6Jc\",\"delete__heading\":\"Bookings_delete__heading__OvUOy\"};","import { type FC , useState , useEffect, Fragment } from \"react\";\r\nimport classes from './Bookings.module.scss';\r\n\r\nimport { fetchGuests } from \"service/guest.service\";\r\n\r\nimport { Loader, Pagination, Table, TableHead, TableBody, ReactModal, Button } from \"components/shared\";\r\nimport { FilterDate } from \"components/account\";\r\nimport { GuestCard } from \"components/property-details\";\r\nimport { EnhancedGuestProps } from \"types/shared\";\r\n\r\nimport { deleteGuest } from \"service/guest.service\";\r\n\r\nimport { useAppDispatch } from \"store/hooks\";\r\nimport { toggleSnackbar } from \"store/ui/ui-slice\";\r\n\r\nconst Bookings: FC = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [dateIsLoading, setDateIsLoading] = useState<boolean>(false);\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n    const [selectedGuest, setSelectedGuest] = useState<EnhancedGuestProps | null>(null);\r\n    const [deleteModalIsOpen, setDeleteModalStatus] = useState<boolean>(false);\r\n\r\n    const [noGuests, setNoGuests] = useState<number | null>(null);\r\n    const [guests, setGuests] = useState<any>(null);\r\n    \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n\r\n    const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\r\n\r\n    const getBookings = async (from?: string, to?: string) => {\r\n        try {\r\n            const response = await fetchGuests({\r\n                skip: Number((currentPage - 1) * postsPerPage),\r\n                limit: postsPerPage,\r\n                from: from ? from : '',\r\n                to: to ? to : ''\r\n            });\r\n\r\n            if (response && response.status === 200) {\r\n                setGuests(response.data.guests);\r\n                setNoGuests(response.data.number);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleFilterActivity = async (data: { from: string; to: string; }) => {\r\n        await getBookings(data.from, data.to);\r\n    }\r\n\r\n    const handleDeletePreview = (guest: EnhancedGuestProps) => {\r\n        if (guest) setSelectedGuest(guest);\r\n        setDeleteModalStatus(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setSelectedGuest(null);\r\n        setDeleteModalStatus(false);\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        if (!selectedGuest) return;\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await deleteGuest(selectedGuest._id, selectedGuest.propertyId.name);\r\n\r\n            if (response && response.status === 200) {\r\n                await getBookings();\r\n                setDeleteModalStatus(false);\r\n\r\n                dispatch(toggleSnackbar({\r\n                    type: 'success',\r\n                    text: response.data.message\r\n                }))\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const hasGuests = () => guests && guests.length > 0;\r\n\r\n    useEffect(() => {\r\n        getBookings();\r\n    }, [currentPage])\r\n\r\n    if (isLoading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <Fragment> \r\n            <ReactModal\r\n                isOpen={ deleteModalIsOpen }\r\n                onClose={ handleClose }\r\n            >       \r\n                <div className={ classes.delete }>\r\n                    <div className={ classes.delete__container }>\r\n                        <div className={ classes.delete__image }>\r\n                            <img src=\"/images/exclamation.png\" alt=\"Exclamation\" />\r\n                        </div>\r\n                        <div className={ classes.delete__content }>\r\n                            <p className={ classes.delete__heading }>Delete Guest</p>\r\n                            <p className={ classes.delete__text }>Are you sure you want to delete guest { selectedGuest && selectedGuest.name } </p>\r\n                        </div>\r\n                        <div className={ classes.delete__actions }>\r\n                            <Button mode=\"slate-grey\" onClick={ handleClose }>Cancel</Button>\r\n                            <Button mode=\"danger\" onClick={ handleDelete } isLoading={ isLoading }>Delete</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ReactModal>\r\n\r\n            <div className={ classes.bookings }>\r\n                <div className={ classes.bookings__container }>\r\n                    { guests && (\r\n                        <div className={ classes.bookings__filter }>\r\n                            <FilterDate onSubmitData={ handleFilterActivity } isLoading={ dateIsLoading } />\r\n                        </div>\r\n                    ) }\r\n                    { hasGuests() ? (\r\n                        <Fragment>\r\n                            <div className={ classes.bookings__data }>\r\n                                <Table title=\"Bookings\">\r\n                                    <TableHead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Phone</th>\r\n                                            <th>Check In</th>\r\n                                            <th>Check Out</th>\r\n                                            <th>Added By</th>\r\n                                            <th>Property</th>\r\n                                            <th>Actions</th>\r\n                                        </tr>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        { guests && guests.map((item: EnhancedGuestProps) => (\r\n                                            <GuestCard hasProperty={ true } guest={ item } key={ item._id.toString() } onDelete={ handleDeletePreview } />\r\n                                        )) }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                            <div className={ classes.bookings__pagination }>\r\n                                <Pagination\r\n                                    currentPage={ currentPage } \r\n                                    postsPerPage={ postsPerPage } \r\n                                    totalPosts={ noGuests ? noGuests : 1 } \r\n                                    paginate={ paginate } \r\n                                />\r\n                            </div>\r\n                        </Fragment>\r\n                    ) : (\r\n                        <div className={ classes.bookings__disclaimer }>\r\n                            <h1>No Guests Yet!</h1>\r\n                            <p>It looks like you don't have any bookings at the moment.</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Bookings;","type Feature = { name: string, label: string};\r\n// Helper functions\r\nconst createFeature = (category: string, name: string, label: string) => ({\r\n    name,\r\n    value: `summary.${category}.${name}.isAvailable`,\r\n    label,\r\n    rules: {},\r\n    icon: { type: 'image', path: `${ICON_BASE_PATH}/${name}.png` }\r\n});\r\n\r\nconst createFeatureGroup = (category: string, features: Feature[]) =>\r\n    features.map(({ name, label }) => createFeature(category, name, label));\r\n\r\n// Constants\r\nconst ICON_BASE_PATH = '/images/icons';\r\n\r\nconst generalData: Feature[] = [\r\n    // { name: 'desk', label: 'Desk' },\r\n    { name: 'workspace', label: 'Workspace' },\r\n    { name: 'parking', label: 'Parking' },\r\n    { name: 'petFriendly', label: 'Pet Friendly' },\r\n    { name: 'tv', label: 'TV' },\r\n    { name: 'wifi', label: 'Wi-Fi' },\r\n    { name: 'ventilation', label: 'Ventilation' },\r\n    { name: 'elevator', label: 'Lift' }\r\n];\r\n\r\nconst kitchenData: Feature[] = [\r\n    { name: 'microwave', label: 'Microwave' },\r\n    { name: 'oven', label: 'Oven' },\r\n    { name: 'hob', label: 'Hob' },\r\n    { name: 'fridge', label: 'Fridge' },\r\n    { name: 'freezer', label: 'Freezer' },\r\n    { name: 'kettle', label: 'Kettle' },\r\n    { name: 'toaster', label: 'Toaster' },\r\n    { name: 'dishwasher', label: 'Dishwasher' }\r\n];\r\n\r\nconst laundryData: Feature[] = [\r\n    { name: 'washingMachine', label: 'Washing Machine' },\r\n    { name: 'clothesHorse', label: 'Clothes Horse' },\r\n    { name: 'iron', label: 'Iron' },\r\n    { name: 'tumbleDryer', label: 'Tumble Dryer' }\r\n];\r\n\r\nconst outsideData: Feature[] = [\r\n    { name: 'garden', label: 'Garden' },\r\n    { name: 'balcony', label: 'Balcony' },\r\n    { name: 'patio', label: 'Patio' },\r\n    { name: 'bbq', label: 'Barbecue' }\r\n];\r\n\r\nconst safetyData: Feature[] = [\r\n    { name: 'carbonMonoxideAlarm', label: 'Carbon Monoxide Alarm' },\r\n    { name: 'smokeAlarm', label: 'Smoke Alarm' },\r\n    { name: 'gasCertificate', label: 'Gas Certificate' },\r\n    { name: 'eicrRates', label: 'EICR Rates' }\r\n];\r\n\r\nexport const config = {\r\n    summary: {\r\n        general: createFeatureGroup('general', generalData),\r\n        kitchen: createFeatureGroup('kitchen', kitchenData),\r\n        laundry: createFeatureGroup('laundry', laundryData),\r\n        outside: createFeatureGroup('outside', outsideData),\r\n        safety: createFeatureGroup('safety', safetyData)\r\n    },\r\n    propertyTypeArray: [\r\n        { name: 'House', value: 'house' },\r\n        { name: 'Bungalow', value: 'bungalow' },\r\n        { name: 'Maisonette', value: 'maisonette' },\r\n        { name: 'Apartment', value: 'apartment' }\r\n    ],\r\n    parkingArray: [\r\n        { name: 'On-Site Free', value: 'on-site-free' },\r\n        { name: 'On-Site Chargeable', value: 'on-site-chargeable' },\r\n        { name: 'Off-Site Free', value: 'off-site-free' },\r\n        { name: 'Off-Site Chargeable', value: 'off-site-chargeable' }\r\n    ],\r\n    checkInOptions: [\r\n        { name: 'Meet & Greet', value: 'meet-and-greet' },\r\n        { name: 'Key Box', value: 'key-box' }\r\n    ],\r\n    petsPolicyOptions: [\r\n        { name: 'Yes - Free Of Charge', value: 'free' },\r\n        { name: 'Yes - Chargeable', value: 'chargeable' },\r\n        { name: 'No', value: 'no' }\r\n    ],\r\n    bedConfigurationArray: [\r\n        { name: 'Single', value: 'single' },\r\n        { name: 'Double', value: 'double' },\r\n        { name: 'King', value: 'king' },\r\n        { name: 'Sofa Bed', value: 'sofa' },\r\n        { name: 'Cots', value: 'cots' },\r\n        { name: 'Twins Single', value: 'twins' }\r\n    ],\r\n    bathroomConfigurationArray: [\r\n        { name: 'WC', value: 'wc' },\r\n        { name: 'Walk In Shower', value: 'walk-in-shower' },\r\n        { name: 'Wet Room', value: 'wet-room' },\r\n        { name: 'Bath', value: 'bath' },\r\n        { name: 'Bath + Shower In Bath', value: 'bath-plus-shower' }\r\n    ],\r\n    bathroomValueConfig: [\r\n        { name: '0.5', value: '0.5' },\r\n        { name: '1', value: '1' }\r\n    ],\r\n    houseKeepingArray: [\r\n        { name: 'Daily - Included', value: 'daily-included' },\r\n        { name: 'Daily - Extra Charge', value: 'daily-extra-charge' },\r\n        { name: 'Weekly - Included', value: 'weekly-included' },\r\n        { name: 'Weekly - Extra Charge', value: 'weekly-extra-charge' },\r\n        { name: 'Fortnightly - Included', value: 'fortnightly-included' },\r\n        { name: 'Fortnightly - Extra Charge', value: 'fortnightly-extra-charge' },\r\n        { name: 'Upon Request - Included', value: 'upon-request-included' },\r\n        { name: 'Upon Request - Extra Charge', value: 'upon-request-extra-charge' }\r\n    ],\r\n    statusConfigArray: [\r\n        { name: 'Live', value: 'live' },\r\n        { name: 'Rejected', value: 'rejected' },\r\n        { name: 'Booked', value: 'booked' }\r\n    ],\r\n    videoConfigArray: [\r\n        { name: 'Vimeo', value: 'vimeo' },\r\n        { name: 'YouTube', value: 'youtube' }\r\n    ]\r\n};\r\n\r\nexport const initialState = {\r\n    type: '',\r\n    floor: '',\r\n    livePropertyLink: '',\r\n    address: {\r\n        number: '', street: '', city: '', zip: ''\r\n    },\r\n    summary: {\r\n        general: {\r\n            // desk: { isAvailable: true, value: 'desk' },\r\n            parking: { isAvailable: true, value: 'parking' },\r\n            petFriendly: { isAvailable: true, value: 'petFriendly' },\r\n            tv: { isAvailable: true, value: 'tv' },\r\n            wifi: { isAvailable: true, value: 'wifi' },\r\n            ventilation: { isAvailable: false, value: 'ventilation' },\r\n            workspace: { isAvailable: true, value: 'workspace' },\r\n            elevator: { isAvailable: false, value: 'elevator' }\r\n        },\r\n        kitchen: {\r\n            microwave: { isAvailable: true, value: 'microwave' },\r\n            oven: { isAvailable: true, value: 'oven' },\r\n            hob: { isAvailable: true, value: 'hob' },\r\n            fridge: { isAvailable: true, value: 'fridge' },\r\n            freezer: { isAvailable: true, value: 'freezer' },\r\n            kettle: { isAvailable: true, value: 'kettle' },\r\n            toaster: { isAvailable: true, value: 'toaster' },\r\n            dishwasher: { isAvailable: true, value: 'dishwasher' }\r\n        },\r\n        laundry: {\r\n            washingMachine: { isAvailable: true, value: 'washingMachine' },\r\n            clothesHorse: { isAvailable: true, value: 'clothesHorse' },\r\n            iron: { isAvailable: true, value: 'iron' },\r\n            tumbleDryer: { isAvailable: false, value: 'tumbleDryer' }\r\n        },\r\n        outside: {\r\n            garden: { isAvailable: true, value: 'garden' },\r\n            balcony: { isAvailable: true, value: 'balcony' },\r\n            patio: { isAvailable: true, value: 'patio' },\r\n            bbq: { isAvailable: true, value: 'bbq' }\r\n        },\r\n        safety: {\r\n            carbonMonoxideAlarm: { isAvailable: true, value: 'carbonMonoxideAlarm' },\r\n            smokeAlarm: { isAvailable: true, value: 'smokeAlarm' },\r\n            gasCertificate: { isAvailable: true, value: 'gasCertificate' },\r\n            eicrRates: { isAvailable: true, value: 'eicrRates' },\r\n        }\r\n    },\r\n    parkingType: { value: 'off-site-chargeable' },\r\n    checkInProcess: { value: 'key-box' },\r\n    petsPolicy: { value: 'chargeable' },\r\n    housekeeping: { value: 'upon-request-extra-charge' },\r\n    cancellation: 'Non refundable',\r\n    checkIn: '16:00',\r\n    checkOut: '10:00',\r\n    bedrooms: [{ type: 'bedroom', name: 'Bedroom', beds: [{ type: 'single' }] }],\r\n    livingRooms: [{ type: 'living-room', name: 'Living Room', beds: [{ type: 'single' }] }],\r\n    bathrooms: [{ type: 'wc', value: 0.5 }],\r\n    videos: [],\r\n    sellingPoints: [\r\n        { text: 'All bills included. No extra charges' },\r\n        { text: 'Guests have exclusive usage of the property' }\r\n    ],\r\n    landlord: {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        nightlyRate: '',\r\n        deposit: '',\r\n        cleaningFee: '',\r\n        parking: '',\r\n        petFee: '',\r\n        other: '',\r\n        margin: '10'\r\n    },\r\n    external: {\r\n        nightlyRate: '',\r\n        deposit: '',\r\n        cleaningFee: '',\r\n        parking: '',\r\n        petFee: '',\r\n        other: ''\r\n    }\r\n};"],"names":["initialState","from","to","_ref","onSubmitData","isLoading","register","handleSubmit","useForm","defaultValues","_jsx","className","classes","filter","children","filter__container","_jsxs","onSubmit","async","data","Input","type","label","name","required","Button","mode","createGuest","formData","propertyId","propertyName","api","method","HTTP_METHODS","POST","JSON","stringify","deleteGuest","guestId","fetchFutureGuests","fetchPastGuests","fetchGuests","skip","config","limit","Bookings","dispatch","useAppDispatch","dateIsLoading","setDateIsLoading","useState","setIsLoading","selectedGuest","setSelectedGuest","deleteModalIsOpen","setDeleteModalStatus","noGuests","setNoGuests","guests","setGuests","currentPage","setCurrentPage","postsPerPage","getBookings","response","Number","status","number","error","console","log","handleDeletePreview","guest","handleClose","useEffect","Loader","Fragment","ReactModal","isOpen","onClose","delete","delete__container","delete__image","src","alt","delete__content","delete__heading","delete__text","delete__actions","onClick","_id","toggleSnackbar","text","message","bookings","bookings__container","bookings__filter","FilterDate","length","bookings__data","Table","title","TableHead","TableBody","map","item","GuestCard","hasProperty","onDelete","toString","bookings__pagination","Pagination","totalPosts","paginate","pageNumber","bookings__disclaimer","createFeatureGroup","category","features","createFeature","value","concat","rules","icon","path","ICON_BASE_PATH","summary","general","kitchen","laundry","outside","safety","propertyTypeArray","parkingArray","checkInOptions","petsPolicyOptions","bedConfigurationArray","bathroomConfigurationArray","bathroomValueConfig","houseKeepingArray","statusConfigArray","videoConfigArray","floor","livePropertyLink","address","street","city","zip","parking","isAvailable","petFriendly","tv","wifi","ventilation","workspace","elevator","microwave","oven","hob","fridge","freezer","kettle","toaster","dishwasher","washingMachine","clothesHorse","iron","tumbleDryer","garden","balcony","patio","bbq","carbonMonoxideAlarm","smokeAlarm","gasCertificate","eicrRates","parkingType","checkInProcess","petsPolicy","housekeeping","cancellation","checkIn","checkOut","bedrooms","beds","livingRooms","bathrooms","videos","sellingPoints","landlord","email","phone","nightlyRate","deposit","cleaningFee","petFee","other","margin","external"],"sourceRoot":""}